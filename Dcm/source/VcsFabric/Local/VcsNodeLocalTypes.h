/* Copyright (c) 2005-2013 Brocade Communications Systems, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/***************************************************************************
 *   Copyright (C) 2005-2009 Brocade Communications Systems, Inc.          *
 *   All rights reserved.                                                  *
 *   Author : Vipool Prajapati                                             *
 ***************************************************************************/

#ifndef VCSNODELOCALTYPES_H
#define VCSNODELOCALTYPES_H

namespace DcmNs
{

typedef enum
{
    VCS_NODE_GET_VCSID = 0,
    VCS_NODE_SET_VCSID,
    VCS_NODE_GET_SWITCHMAC,
    VCS_NODE_GET_LOCAL_MAPPEDID,
    VCS_NODE_SET_FCFMAC,
    VCS_NODE_GET_VCSMODE,
    VCS_NODE_SET_VCSMODE,
    VCS_NODE_ENQ_SWITCH,
    VCS_NODE_GENERATE_SCN,
    VCS_NODE_GET_ISPRINCIPAL,
    VCS_NODE_SET_ISPRINCIPAL,
	VCS_NODE_PORT_DISABLE,
    VCS_NODE_SET_ISREADY,
    VCS_NODE_GET_ISREADY,
    VCS_NODE_TRIGGER_POSTBOOT,
    VCS_NODE_SET_IS_DCMD_READY_FOR_HASM_LAUNCH,
    VCS_NODE_GET_IS_DCMD_READY_FOR_HASM_LAUNCH,
    VCS_NODE_SET_IS_HASM_LAUNCHED,
    VCS_NODE_GET_IS_HASM_LAUNCHED,
    VCS_NODE_GET_CLUSTER_TYPE,
    VCS_NODE_SET_RBRIDGEID,
    VCS_NODE_GET_RBRIDGEID,
    VCS_NODE_COPY_DEFAULT_START_TRIGGER,
    VCS_NODE_SET_DOMAINID,
    VCS_NODE_ENABLE_VALIDATE,
    VCS_NODE_CONFIG_DISTRIBUTE,
    VCS_NODE_GET_SWITCHWWN,
    VCS_NODE_SET_SWITCHWWN,
    VCS_NODE_GET_SWITCHWWN_FROM_RBRIDGEID,
    VCS_NODE_GET_RBRIDGEID_FROM_SWITCHWWN,
    VCS_NODE_IS_NODE_IN_CLUSTER,
    VCS_NODE_IS_LOCAL_NODE_IN_CLUSTER,
    VCS_NODE_GET_SWITCHIP_FROM_RBRIDGEID,
    VCS_NODE_CLUSTER_MERGE,
    VCS_NODE_GET_CONFIGURATION_NUMBER,
    VCS_NODE_GET_CONFIGURATION_TIME,
    VCS_NODE_SEGMENT_SWITCH,
    VCS_NODE_SET_NEWSHOWVCS,
    VCS_NODE_GET_SWITCH_IDENTIFIER_INFO,
    VCS_NODE_IS_IP_REACHABLE_FROM_LOCAL_NODE,
    VCS_GET_CLUSTER_RBRIDGEID_FROM_WWN,
    VCS_NODE_IS_FABRIC_DIST_SERVICE_ENABLED,
    VCS_NODE_UPDATE_SWITCH_INFO,
    VCS_NODE_TEST_CLIENT_FOR_DUAL_CONNECT,
    VCS_SET_WYSEREA_RATE_LIMITING_DELAY,
    VCS_GET_WYSEREA_RATE_LIMITING_DELAY,
    VCS_NODE_GET_CURRENT_RBRIDGE_IDS_AND_LOCATION_IDS,
    VCS_NODE_NOTIFY_START_SYNC_DUMP,
    VCS_NODE_SLOT_REMOVE_MESSAGE,
    VCS_NODE_SLOT_ONLINE,
    VCS_NODE_SLOT_OFFLINE,
    VCS_NODE_GENERATE_SLOT_SCN,
    VCS_NODE_SLOT_TYPE_QUERY,
	VCS_NODE_CLEAR_LINECARD_MESSAGE,
	VCS_NODE_HA_PEER_ENQ_MESSAGE,
	VCS_NODE_HA_HEARTBEAT_MESSAGE,
    VCS_NODE_SLOT_CONFIG_MESSAGE,
    VCS_NODE_SLOT_SET_LINECARD_MODE_MESSAGE, 
    VCS_NODE_NOTIFY_END_SYNC_DUMP,
    VCS_NODE_SLOT_STATE_QUERY,
    VCS_SET_FCF_MAC_ADDRESS_SERVICE_INDEPENDENT,
    VCS_NODE_INTER_DCM_CCM_CONFIG_DISTRIBUTE,
    VCS_NODE_CLI_ALLOWED_FROM_THIS_LOCATION,
    VCS_FABRIC_DEBUG_CLIENT_MSG,
    VCS_FABRIC_SET_TTYNAME,
    VCS_COPY_RUNNING_TO_STARTUP_MESSAGE, 
    VCS_COPY_DEFAULT_TO_STARTUP_MESSAGE,
    VCS_COPY_TO_STARTUP_MESSAGE,
    VCS_COPY_TO_STARTUP_ALLOWED_MESSAGE,
    VCS_FABRIC_SET_MODE_CHANGE_PARAMETERS,
    VCS_RESET_DOMAIN_BITMAP_MESSAGE,
    VCS_PREPARE_DOMAIN_LIST_MESSAGE,
    VCS_NODE_SET_PRINCIPAL_PRIORITY,
    VCS_NODE_GET_PRINCIPAL_PRIORITY,
    VCS_NODE_PRINCIPAL_TRIGGER_FAILOVER,
    VCS_NODE_CREATE_DUMMY_SLOT_MESSAGE,
    VCS_ENABLE_SLOT_SCN_MESSAGE,
    VCS_NODE_IS_CLI_ALLOWED_FROM_THIS_LOCATION,
    VCS_SET_WYSEREA_CONFIG_FILTER_SERVICE_INDEPENDENT,
    VCS_REMOVE_WYSEREA_CONFIG_FILTER_SERVICE_INDEPENDENT,
    VCS_NODE_CONFIG_SNAPSHOT_RESTORE,
    VCS_FABRIC_SET_VCS_CLUSTER_CONFIG,
    VCS_REMOVE_CFG_FILE_SERVICE_INDEPENDENT,
    VCS_NODE_COLLECT_SWITCH_IDENTIFIER_INFO,
    VIRTUAL_IP_LOCAL_SHOW_VIP,
    VCS_NODE_IS_GVLAN_CAPABLE,
    VCS_NODE_IS_GVLAN_ENABLED,
    VCS_NODE_HA_SYNC_CONFIG_TO_KERNEL
} VcsNodeLocalMessages;

typedef enum
{
    VCS_NODE_DOMAIN_VALID = 0,
    VCS_NODE_DOMAIN_INVALID,
    VCS_NODE_DOMAIN_CAPABILITIES_AVAILABLE,
    VCS_NODE_DOMAIN_REACHABLE,
    VCS_NODE_DOMAIN_UNREACHABLE,
    VCS_NODE_SWITCH_OFFLINE,
    VCS_NODE_ZONE_CHANGED,
    VCS_NODE_ZONE_ABORTED,
    VCS_NODE_SWITCH_READY_TO_ACCEPT_COMMANDS,
    VCS_NODE_SWITCH_ACTIVATION_COMPLETE,
    VCS_NODE_FABOS_DOMAIN_VALID,
    VCS_NODE_FABOS_DOMAIN_INVALID,
    VCS_NODE_FABOS_DOMAIN_CAPABILITIES_AVAILABLE,
    VCS_NODE_FABOS_DOMAIN_REACHABLE,
    VCS_NODE_FABOS_DOMAIN_UNREACHABLE,
    VCS_NODE_FABOS_PORT_DISABLE,
    VCS_NODE_FABOS_SLOT_ONLINE,
    VCS_NODE_FABOS_SLOT_OFFLINE,
    VCS_NODE_FABOS_SWITCH_OFFLINE,
    VCS_NODE_FABOS_ZONE_CHANGED,
    VCS_NODE_FABOS_ZONE_ABORTED,
    VCS_NODE_FABOS_SWITCH_READY_TO_ACCEPT_COMMANDS,
    VCS_NODE_FABOS_SWITCH_ACTIVATION_COMPLETE,
    VCS_NODE_FABOS_SYNC_START,
    VCS_NODE_FABOS_SERVICE_READY,
    VCS_NODE_FABOS_LINECARD_READY,
    VCS_NODE_FABOS_SYSTEM_READY
} VcsNodeDomainEvent;

typedef enum
{
	VCS_NODE_PORT_DISABLED = 0,
	VCS_NODE_FABOS_PORT_DISABLED
} VcsNodePortEvent;

typedef enum
{
    VCS_NODE_SLOT_LINECARD_TYPE_UNKNOWN = 0,
    VCS_NODE_SLOT_LINECARD_TYPE_48X10G,
    VCS_NODE_SLOT_LINECARD_TYPE_12X40G, 
    VCS_NODE_SLOT_LINECARD_TYPE_ELARA2E,
    VCS_NODE_SLOT_LINECARD_TYPE_ELARA2F, 
    VCS_NODE_SLOT_LINECARD_TYPE_CALLISTOE,
    VCS_NODE_SLOT_LINECARD_TYPE_CALLISTOF,
    VCS_NODE_SLOT_LINECARD_TYPE_CARME_E,
    VCS_NODE_SLOT_LINECARD_TYPE_72X1G, 
    VCS_NODE_SLOT_LINECARD_TYPE_48X1G,
    VCS_NODE_SLOT_LINECARD_TYPE_CASTOR,
    VCS_NODE_SLOT_LINECARD_TYPE_POLLUX,
    VCS_NODE_SLOT_LINECARD_TYPE_CASTORT
} VcsNodeSlotLinecardType;

typedef enum
{
    VCS_NODE_SLOT_LINECARD_MODE_DEFAULT = 1,
    VCS_NODE_SLOT_LINECARD_MODE_10G
} VcsNodeSlotLinecardMode;

#define DEFAULTMODE 0x00000FFF
#define TENGIGMODE  0x00000000

// DCM_FSS_STAGE1, DCM_FSS_STAGE1, CCM_FSS_STAGE1 are shared by all services
// Please add any new stages at the end of the list and do NOT modify the exsiting ones
typedef enum
{
    DCM_FSS_STAGE1               = 1,
    DCM_FSS_STAGE2               = 2,
    DCM_FSS_STAGE_FCOE_PLUGIN    = 3,
    DCM_FSS_STAGE4_AAA_PLUGIN_CH = 4,
    DCM_WARM_PREPARE_PLUGINS     = 5

} DcmdChassisFssStages;

typedef enum
{
//  DCM_FSS_STAGE1                = 1,
//  DCM_FSS_STAGE2                = 2,
    SNMPD_CONFIG_PUSH             = 3,
    TSD_FSS_STAGE4                = 4,
    DCM_FSS_STAGE_FCOE_PLUGIN_FC  = 5,
    AAA_CFG_STAGE_FC              = 6,
    FSPF_PLUGIN_FSS_STAGE         = 7,
    LICENSE_PLUGIN_FSS_STAGE      = 8,
    FW_PLUGIN_FSS_STAGE           = 9,
    AUTH_PLUGIN_FSS_STAGE10       = 10,
    DCM_FSPF_WARM_PUSH            = 11,
    DCM_WARM_PREPARE_CLUSTER      = 12

} DcmdFcswFssStages;

typedef enum
{
//  DCM_FSS_STAGE1                = 1,
//  DCM_FSS_STAGE2                = 2,
    DCM_FSS_STAGE_FCOE_PLUGIN_ETH = 3

} DcmdEthswFssStages;


typedef enum
{
//  CCM_FSS_STAGE1            = 1,
    CCM_WARM_PREPARE_PLUGINS  = 2

} CcmdChassisFssStages;

typedef enum
{
//  CCM_FSS_STAGE1           = 1,
    CCM_WARM_PREPARE_CLUSTER = 2

} CcmdFcswFssStages;

typedef enum
{
    CCM_FSS_STAGE1           = 1

} CcmEthswFssStages;


typedef enum
{
    NSP_FSS_STAGE1           = 1

} NspFssStages;


}

#endif // VCSNODELOCALTYPES_H
